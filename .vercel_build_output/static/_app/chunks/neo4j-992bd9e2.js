var r=Object.defineProperty,e=Object.prototype.hasOwnProperty,s=Object.getOwnPropertySymbols,t=Object.prototype.propertyIsEnumerable,a=(e,s,t)=>s in e?r(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;import{$ as i,a0 as n,a1 as o}from"./vendor-041ae036.js";let c=null;const u=()=>{c||(c=i.driver("bolt://192.168.0.38:11006",i.auth.basic("neo4j","1234")))},p=r=>((r,i)=>{for(var n in i||(i={}))e.call(i,n)&&a(r,n,i[n]);if(s)for(var n of s(i))t.call(i,n)&&a(r,n,i[n]);return r})({label:r.get("res").labels[0]},r.get("res").properties),l=async(r,e=1,s=14)=>(await c.session().run((new n).match("res",r).return("res").skip((e-1)*s).limit(s).toString())).records.map((r=>p(r))),d=async r=>{const{cypher:e,params:s}=(new n).match("a","Album",{id:r.id}).relationship("HAS_MADE",o.Direction.INCOMING).to("art").relationship("HAS_STYLE",o.Direction.OUTGOING).to("res","Style").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])},b=async r=>{const{cypher:e,params:s}=(new n).match("a","Album",{id:r.id}).relationship("HAS_MADE",o.Direction.INCOMING).to("res").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])},h=async r=>{const{cypher:e,params:s}=(new n).match("a","Artist",{id:r.id}).relationship("HAIL_FROM",o.Direction.OUTGOING).to("res").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])},m=async r=>{const{cypher:e,params:s}=(new n).match("a","Artist",{id:r.id}).relationship("HAS_STYLE",o.Direction.OUTGOING).to("res").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])},y=async r=>{const{cypher:e,params:s}=(new n).match("a","Group",{id:r.id}).relationship("HAIL_FROM",o.Direction.OUTGOING).to("res").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])},O=async r=>{const{cypher:e,params:s}=(new n).match("a","Group",{id:r.id}).relationship("HAS_STYLE",o.Direction.OUTGOING).to("res").return("res").build(),t=await c.session().run(e,s);return p(t.records[0])};export{h as a,l as b,b as c,d,m as e,y as f,O as g,u as i};
